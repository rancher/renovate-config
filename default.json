{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "baseBranches": [
    "main"
  ],
  "rebaseWhen": "auto",
  "labels": [
    "dependencies"
  ],
  "automergeStrategy": "merge-commit",
  "prConcurrentLimit": 0,
  "constraints": {
    "go": "<1.25"
  },
  "postUpdateOptions": [
    "gomodTidy",
    "gomodUpdateImportPaths"
  ],
  "customDatasources": {
    "local": {
      "defaultRegistryUrlTemplate": "file://data/{{packageName}}.json",
      "format": "json"
    }
  },
  "customManagers": [
    {
      "customType": "regex",
      "managerFilePatterns": [
        "/\\.github/workflows/renovate.yml/",
        "/\\.github/workflows/renovate-vault.yml/"
      ],
      "matchStrings": [
        ".*?RENOVATE_VERSION:\\s\\\"(?<currentValue>.*?)\\\"\\n"
      ],
      "depNameTemplate": "renovate/renovate",
      "datasourceTemplate": "docker"
    },
    {
      "customType": "regex",
      "managerFilePatterns": [
        "/(^|/|\\.)Dockerfile$/",
        "/(^|/)Dockerfile[^/]*$/",
        "/hack/make/deps.mk/"
      ],
      "matchStrings": [
        "KUBECTL_VERSION.*\\=\\s*(?<currentValue>.*?)\\n"
      ],
      "depNameTemplate": "kubernetes/kubernetes",
      "datasourceTemplate": "github-releases"
    },
    {
      "customType": "regex",
      "managerFilePatterns": [
        "/(^|/|\\.)Dockerfile$/",
        "/(^|/)Dockerfile[^/]*$/"
      ],
      "matchStrings": [
        "ENV KUSTOMIZE_VERSION(\\=|\\s)(?<currentValue>.*?)\\n"
      ],
      "depNameTemplate": "kubernetes-sigs/kustomize",
      "datasourceTemplate": "github-releases"
    },
    {
      "customType": "regex",
      "managerFilePatterns": [
        "/(^|/|\\.)Dockerfile$/",
        "/(^|/)Dockerfile[^/]*$/"
      ],
      "matchStrings": [
        "ENV K9S_VERSION(\\=|\\s)(?<currentValue>.*?)\\n"
      ],
      "depNameTemplate": "derailed/k9s",
      "datasourceTemplate": "github-releases"
    },
    {
      "customType": "regex",
      "managerFilePatterns": [
        "/(^|/|\\.)Dockerfile$/",
        "/(^|/)Dockerfile[^/]*$/"
      ],
      "matchStrings": [
        "ENV HELM_VERSION(\\=|\\s)(?<currentValue>.*?)\\n"
      ],
      "depNameTemplate": "helm/helm",
      "datasourceTemplate": "github-releases"
    },
    {
      "customType": "regex",
      "managerFilePatterns": [
        "/(^|/|\\.)Dockerfile$/",
        "/(^|/)Dockerfile[^/]*$/"
      ],
      "matchStrings": [
        "ENV YQ_VERSION(\\=|\\s)(?<currentValue>.*?)\\n"
      ],
      "depNameTemplate": "mikefarah/yq",
      "datasourceTemplate": "github-releases"
    },
    {
      "customType": "regex",
      "managerFilePatterns": [
        "/(^|/|\\.)Dockerfile$/",
        "/(^|/)Dockerfile[^/]*$/",
        "/(^|/|\\.)Makefile$/",
        "/(^|/)Makefile[^/]*$/"
      ],
      "matchStrings": [
        "ENV CONTROLLER_GEN_VERSION(\\=|\\s)(?<currentValue>.*?)\\n",
        "ENV CONTROLLER_GEN_VER(\\=|\\s)(?<currentValue>.*?)\\n"
      ],
      "depNameTemplate": "kubernetes-sigs/controller-tools",
      "datasourceTemplate": "github-releases"
    },
    {
      "customType": "regex",
      "managerFilePatterns": [
        "/(^|/|\\.)Dockerfile$/",
        "/(^|/)Dockerfile[^/]*$/",
        "/(^|/)Makefile$/",
        "/hack/base.mk$/"
      ],
      "matchStrings": [
        ".*?https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh.*?sh -s (?<currentValue>.*?);",
        "GOLANGCI_(LINT|LINT_VER|VERSION)(:|\\?|\\s)*=\\s*(?<currentValue>.*?)\\n"
      ],
      "depNameTemplate": "golangci/golangci-lint",
      "datasourceTemplate": "github-releases"
    },
    {
      "customType": "regex",
      "managerFilePatterns": [
        "/(^|/|\\.)Dockerfile$/",
        "/(^|/)Dockerfile[^/]*$/"
      ],
      "matchStrings": [
        "ENV CNI_PLUGINS_VERSION(\\=|\\s)(?<currentValue>.*?)\\n"
      ],
      "depNameTemplate": "containernetworking/plugins",
      "datasourceTemplate": "github-releases"
    },
    {
      "customType": "regex",
      "managerFilePatterns": [
        "/(^|/|\\.)Dockerfile$/",
        "/(^|/)Dockerfile[^/]*$/"
      ],
      "matchStrings": [
        "ENV FLANNEL_VERSION(\\=|\\s)(?<currentValue>.*?)\\n"
      ],
      "depNameTemplate": "flannel-io/flannel",
      "datasourceTemplate": "github-releases"
    },
    {
      "customType": "regex",
      "managerFilePatterns": [
        "/(^|/|\\.)Dockerfile$/",
        "/(^|/)Dockerfile[^/]*$/"
      ],
      "matchStrings": [
        "ENV RANCHER_CONFD_VERSION(\\=|\\s)(?<currentValue>.*?)\\n"
      ],
      "depNameTemplate": "rancher/confd",
      "datasourceTemplate": "github-releases"
    },
    {
      "customType": "regex",
      "managerFilePatterns": [
        "/(^|/|\\.)Dockerfile$/",
        "/(^|/)Dockerfile[^/]*$/"
      ],
      "matchStrings": [
        "ENV ETCD_VERSION(\\=|\\s)(?<currentValue>.*?)\\n",
        "ENV CATTLE_ETCD_VERSION(\\=|\\s)(?<currentValue>.*?)\\n"
      ],
      "depNameTemplate": "etcd-io/etcd",
      "datasourceTemplate": "github-releases"
    },
    {
      "customType": "regex",
      "managerFilePatterns": [
        "/(^|/|\\.)Dockerfile$/",
        "/(^|/)Dockerfile[^/]*$/"
      ],
      "matchStrings": [
        "ENV CRIDOCKERD_VERSION(\\=|\\s)(?<currentValue>.*?)\\n"
      ],
      "depNameTemplate": "Mirantis/cri-dockerd",
      "datasourceTemplate": "github-releases"
    },
    {
      "customType": "regex",
      "managerFilePatterns": [
        "/(^|/|\\.)Dockerfile$/",
        "/(^|/)Dockerfile[^/]*$/"
      ],
      "matchStrings": [
        "ENV DOCKER_VERSION(\\=|\\s)(?<currentValue>.*?)\\n"
      ],
      "depNameTemplate": "moby/moby",
      "datasourceTemplate": "github-releases"
    },
    {
      "customType": "regex",
      "managerFilePatterns": [
        "/(^|/|\\.)Dockerfile$/",
        "/(^|/)Dockerfile[^/]*$/"
      ],
      "matchStrings": [
        "RUN git -C / clone --branch release-(?<currentValue>.*?) --depth=1 https://github.com/rancher/helm\\n"
      ],
      "depNameTemplate": "rancher/helm",
      "packageNameTemplate": "https://github.com/rancher/helm",
      "datasourceTemplate": "git-refs"
    },
    {
      "customType": "regex",
      "managerFilePatterns": [
        "/values.yaml$/"
      ],
      "matchStrings": [
        "global:[\\s\\S]*?kubectl:[\\s\\S]*?repository:\\s(?<depName>.*?)\\n[\\s\\S]*?tag:\\s(?<currentValue>.*?)\\n"
      ],
      "datasourceTemplate": "docker",
      "description": "usage of rancher/kubectl in global.kubectl in Helm chart"
    },
    {
      "customType": "regex",
      "managerFilePatterns": [
        "/(^|/|\\.)Dockerfile$/",
        "/(^|/)Dockerfile[^/]*$/"
      ],
      "matchStrings": [
        "K3D_VERSION(\\=|\\s)(?<currentValue>.*?)\\n"
      ],
      "depNameTemplate": "k3d-io/k3d",
      "datasourceTemplate": "github-releases"
    },
    {
      "customType": "regex",
      "managerFilePatterns": [
        "/(^|/|\\.)Dockerfile$/",
        "/(^|/)Dockerfile[^/]*$/",
        "/(^|/)Makefile$/",
        "/hack/make/deps.mk/"
      ],
      "matchStrings": [
        "# renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?)?( extractVersion=(?<extractVersion>.*?))?\\s+.+_(version|VERSION).*=(\\s|\"|)(?<currentValue>.*)(\"|)",
        "# renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?) digestVersion=(?<currentValue>.*)\\s+.+_(sha256|arm64|amd64|arm|s390x).*=(\\s|\"|)(?<currentDigest>.*)(\"|)"
      ]
    },
    {
      "customType": "regex",
      "managerFilePatterns": [
        "/(^|/)Makefile$/",
        "/hack/make/deps.mk/"
      ],
      "matchStrings": [
        "# renovate-local: (?<depName>.*)\\s+.+_(version|VERSION).*=(\\s|\"|)(?<currentValue>.*)(\"|)",
        "# renovate-local: (?<depName>.*)=(?<currentValue>.*)\\s+.+_(sha256|arm64|amd64|arm|s390x).*=(\\s|\"|)(?<currentDigest>.*)(\"|)"
      ],
      "datasourceTemplate": "custom.local"
    }
  ],
  "packageRules": [
    {
      "matchPackageNames": [
        "renovate/renovate"
      ],
      "extractVersion": "(?<version>.*)-full$",
      "groupName": "renovate-bumps"
    },
    {
      "matchManagers": [
        "gomod"
      ],
      "groupName": "gomod-sigsk8sio-dependencies",
      "matchPackageNames": [
        "sigs.k8s.io/**"
      ]
    },
    {
      "matchManagers": [
        "gomod"
      ],
      "matchPackageNames": [
        "!k8s.io/kubernetes",
        "k8s.io/**"
      ],
      "groupName": "gomod-k8sio-dependencies",
      "allowedVersions": "<0.32.0"
    },
    {
      "matchPackageNames": [
        "k8s.io/kubernetes",
        "kubernetes/kubernetes",
        "rancher/kubectl"
      ],
      "allowedVersions": "<1.32.0"
    },
    {
      "allowedVersions": "<15.7.0",
      "matchPackageNames": [
        "/^registry.suse.com/bci/bci/",
        "/^registry.suse.com/suse/sle15/"
      ]
    },
    {
      "matchPackageNames": [
        "golang",
        "go",
        "registry.suse.com/bci/golang",
        "registry.opensuse.org/opensuse/bci/golang"
      ],
      "allowedVersions": "<1.25.0"
    },
    {
      "matchDatasources": [
        "golang-version"
      ],
      "allowedVersions": "<1.25.0"
    },
    {
      "allowedVersions": "<1.0.0",
      "matchPackageNames": [
        "rancher/dapper"
      ]
    },
    {
      "groupName": "GitHub Actions",
      "matchManagers": [
        "github-actions"
      ],
      "matchDatasources": [
        "github-tags"
      ],
      "matchDepTypes": [
        "action"
      ],
      "pinDigests": true
    },
    {
      "matchPackageNames": [
        "registry.suse.com/**",
        "registry.opensuse.org/**"
      ],
      "matchCurrentValue": "latest",
      "enabled": false
    },
    {
      "matchManagers": [
        "github-actions"
      ],
      "matchPackageNames": [
        "registry.suse.com/bci/golang",
        "registry.opensuse.org/opensuse/bci/golang"
      ],
      "matchCurrentValue": "1.24",
      "enabled": false
    },
    {
      "extractVersion": "^release-(?<version>.*)$",
      "matchPackageNames": [
        "rancher/helm"
      ]
    },
    {
      "matchPackageNames": [
        "golang.org/x/crypto/x509roots/fallback",
        "golang.org/x/exp"
      ],
      "matchUpdateTypes": [
        "patch",
        "digest"
      ]
    },
    {
      "description": "Disable major bumps",
      "matchPackageNames": [
        "rancher/kuberlr-kubectl"
      ],
      "matchUpdateTypes": [
        "minor",
        "patch"
      ]
    }
  ]
}