{
  "baseBranches": [
    "main"
  ],
  "rebaseWhen": "auto",
  "labels": [
    "dependencies"
  ],
  "automergeStrategy": "merge-commit",
  "prConcurrentLimit": 0,
  "constraints": {
    "go": "<1.22"
  },
  "postUpdateOptions": [
    "gomodTidy"
  ],
  "regexManagers": [
    {
      "fileMatch": [
        "\\.github/workflows/renovate.yml"
      ],
      "matchStrings": [
        ".*?RENOVATE_VERSION:\\s\\\"(?<currentValue>.*?)\\\"\\n"
      ],
      "depNameTemplate": "renovate/renovate",
      "datasourceTemplate": "docker"
    },
    {
      "fileMatch": [
        "(^|/|\\.)Dockerfile$",
        "(^|/)Dockerfile[^/]*$"
      ],
      "matchStrings": [
        "ENV KUBECTL_VERSION(\\=|\\s)(?<currentValue>.*?)\\n"
      ],
      "depNameTemplate": "kubernetes/kubernetes",
      "datasourceTemplate": "github-releases"
    },
    {
      "fileMatch": [
        "(^|/|\\.)Dockerfile$",
        "(^|/)Dockerfile[^/]*$"
      ],
      "matchStrings": [
        "ENV KUSTOMIZE_VERSION(\\=|\\s)(?<currentValue>.*?)\\n"
      ],
      "depNameTemplate": "kubernetes-sigs/kustomize",
      "datasourceTemplate": "github-releases"
    },
    {
      "fileMatch": [
        "(^|/|\\.)Dockerfile$",
        "(^|/)Dockerfile[^/]*$"
      ],
      "matchStrings": [
        "ENV K9S_VERSION(\\=|\\s)(?<currentValue>.*?)\\n"
      ],
      "depNameTemplate": "derailed/k9s",
      "datasourceTemplate": "github-releases"
    },
    {
      "fileMatch": [
        "(^|/|\\.)Dockerfile$",
        "(^|/)Dockerfile[^/]*$"
      ],
      "matchStrings": [
        "ENV HELM_VERSION(\\=|\\s)(?<currentValue>.*?)\\n"
      ],
      "depNameTemplate": "helm/helm",
      "datasourceTemplate": "github-releases"
    },
    {
      "fileMatch": [
        "(^|/|\\.)Dockerfile$",
        "(^|/)Dockerfile[^/]*$"
      ],
      "matchStrings": [
        "ENV YQ_VERSION(\\=|\\s)(?<currentValue>.*?)\\n"
      ],
      "depNameTemplate": "mikefarah/yq",
      "datasourceTemplate": "github-releases"
    },
    {
      "fileMatch": [
        "(^|/|\\.)Dockerfile$",
        "(^|/)Dockerfile[^/]*$"
      ],
      "matchStrings": [
        ".*?https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh.*?sh -s (?<currentValue>.*?);",
        "ENV GOLANGCI_LINT(\\=|\\s)(?<currentValue>.*?)\\n"
      ],
      "depNameTemplate": "golangci/golangci-lint",
      "datasourceTemplate": "github-releases"
    },
    {
      "fileMatch": [
        "(^|/|\\.)Dockerfile$",
        "(^|/)Dockerfile[^/]*$"
      ],
      "matchStrings": [
        "ENV CNI_PLUGINS_VERSION(\\=|\\s)(?<currentValue>.*?)\\n"
      ],
      "depNameTemplate": "containernetworking/plugins",
      "datasourceTemplate": "github-releases"
    },
    {
      "fileMatch": [
        "(^|/|\\.)Dockerfile$",
        "(^|/)Dockerfile[^/]*$"
      ],
      "matchStrings": [
        "ENV FLANNEL_VERSION(\\=|\\s)(?<currentValue>.*?)\\n"
      ],
      "depNameTemplate": "flannel-io/flannel",
      "datasourceTemplate": "github-releases"
    },
    {
      "fileMatch": [
        "(^|/|\\.)Dockerfile$",
        "(^|/)Dockerfile[^/]*$"
      ],
      "matchStrings": [
        "ENV RANCHER_CONFD_VERSION(\\=|\\s)(?<currentValue>.*?)\\n"
      ],
      "depNameTemplate": "rancher/confd",
      "datasourceTemplate": "github-releases"
    },
    {
      "fileMatch": [
        "(^|/|\\.)Dockerfile$",
        "(^|/)Dockerfile[^/]*$"
      ],
      "matchStrings": [
        "ENV ETCD_VERSION(\\=|\\s)(?<currentValue>.*?)\\n"
      ],
      "depNameTemplate": "etcd-io/etcd",
      "datasourceTemplate": "github-releases"
    },
    {
      "fileMatch": [
        "(^|/|\\.)Dockerfile$",
        "(^|/)Dockerfile[^/]*$"
      ],
      "matchStrings": [
        "ENV CRIDOCKERD_VERSION(\\=|\\s)(?<currentValue>.*?)\\n"
      ],
      "depNameTemplate": "Mirantis/cri-dockerd",
      "datasourceTemplate": "github-releases"
    },
    {
      "fileMatch": [
        "(^|/|\\.)Dockerfile$",
        "(^|/)Dockerfile[^/]*$"
      ],
      "matchStrings": [
        "ENV DOCKER_VERSION(\\=|\\s)(?<currentValue>.*?)\\n"
      ],
      "depNameTemplate": "moby/moby",
      "datasourceTemplate": "github-releases"
    },
    {
      "fileMatch": [
        "(^|/|\\.)Dockerfile$",
        "(^|/)Dockerfile[^/]*$"
      ],
      "matchStrings": [
        "RUN git -C / clone --branch release-(?<currentValue>.*?) --depth=1 https://github.com/rancher/helm\\n"
      ],
      "depNameTemplate": "rancher/helm",
      "packageNameTemplate": "https://github.com/rancher/helm",
      "datasourceTemplate": "git-refs"
    },
    {
      "fileMatch": [
        "values.yaml$"
      ],
      "matchStrings": [
        "global:[\\s\\S]*?kubectl:[\\s\\S]*?repository:\\s(?<depName>.*?)\\n[\\s\\S]*?tag:\\s(?<currentValue>.*?)\\n"
      ],
      "datasourceTemplate": "docker",
      "description": "usage of rancher/kubectl in global.kubectl in Helm chart"
    }
  ],
  "packageRules": [
    {
      "matchPackagePatterns": [
        "renovate/renovate"
      ],
      "extractVersion": "(?<version>.*)-slim$"
    },
    {
      "matchPackagePatterns": [
        "kustomize"
      ],
      "extractVersion": "^kustomize/(?<version>.*)$",
      "groupName": "kustomize"
    },
    {
      "matchManagers": [
        "gomod"
      ],
      "matchPackagePatterns": [
        "^sigs.k8s.io"
      ],
      "groupName": "gomod-sigsk8sio-dependencies"
    },
    {
      "matchManagers": [
        "gomod"
      ],
      "matchPackageNames": [
        "k8s.io/api",
        "k8s.io/apiextensions-apiserver",
        "k8s.io/apimachinery",
        "k8s.io/apiserver",
        "k8s.io/client-go",
        "k8s.io/cli-runtime",
        "k8s.io/cloud-provider",
        "k8s.io/cluster-bootstrap",
        "k8s.io/code-generator",
        "k8s.io/component-base",
        "k8s.io/component-helpers",
        "k8s.io/controller-manager",
        "k8s.io/cri-api",
        "k8s.io/csi-translation-lib",
        "k8s.io/kube-aggregator",
        "k8s.io/kube-controller-manager",
        "k8s.io/kube-openapi",
        "k8s.io/kube-proxy",
        "k8s.io/kube-scheduler",
        "k8s.io/kubectl",
        "k8s.io/kubelet",
        "k8s.io/kubernetes",
        "k8s.io/legacy-cloud-providers",
        "k8s.io/metrics",
        "k8s.io/mount-utils",
        "k8s.io/pod-security-admission",
        "k8s.io/sample-apiserver",
        "k8s.io/sample-cli-plugin",
        "k8s.io/sample-controller"
      ],
      "groupName": "gomod-k8sio-dependencies",
      "allowedVersions": "<0.28.0"
    },
    {
      "matchPackagePatterns": [
        "registry.suse.com/bci/bci",
        "registry.suse.com/suse/sle15"
      ],
      "allowedVersions": "<15.6.0"
    },
    {
      "matchPackagePatterns": [
        "registry.suse.com/bci/golang"
      ],
      "matchPackageNames": [
        "golang",
        "go"
      ],
      "allowedVersions": "<1.22.0"
    },
    {
      "matchDatasources": [
        "golang-version"
      ],
      "allowedVersions": "<1.22.0"
    },
    {
      "matchPackagePatterns": [
        "rancher/dapper"
      ],
      "allowedVersions": "<1.0.0"
    },
    {
      "matchManagers": [
        "github-actions"
      ],
      "matchUpdateTypes": [
        "minor",
        "patch"
      ],
      "pinDigests": true
    },
    {
      "matchPackagePatterns": [
        "rancher/helm"
      ],
      "extractVersion": "^release-(?<version>.*)$"
    },
    {
      "matchPackagePatterns": [
        "kubernetes/kubernetes"
      ],
      "allowedVersions": "<1.28.0"
    },
    {
      "matchPackagePatterns": [
        "rancher/kubectl"
      ],
      "allowedVersions": "<1.28.0",
      "description": "kubectl is supported within one minor version (older or newer) of kube-apiserver"
    },    
    {
      "fileMatch": [
        "(^|/|\\.)Dockerfile$",
        "(^|/)Dockerfile[^/]*$"
      ],
      "matchStrings": [
        "K3D_VERSION(\\=|\\s)(?<currentValue>.*?)\\n"
      ],
      "depNameTemplate": "k3d-io/k3d",
      "datasourceTemplate": "github-releases"
    }
  ]
}
