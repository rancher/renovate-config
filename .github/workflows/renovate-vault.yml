# The renovate workflow_call, for remote repositories to call.
name: Renovate (Vault)
on:
  workflow_call:
    inputs:
      logLevel:
        description: "Override default log level"
        required: false
        default: "info"
        type: string
      overrideSchedule:
        description: "Override all schedules"
        required: false
        default: "false"
        type: string
      runner:
        description: "Value to be used on runs-on"
        required: false
        default: '["ubuntu-latest"]'
        type: string
      configMigration:
        description: "Toggle PRs for config migration"
        required: false
        default: "true"
        type: string
      renovateConfig:
        description: "Define a custom renovate config file"
        required: false
        default: ".github/renovate.json"
        type: string
    secrets:
      override-token:
        description: "Overrides the GH App Token. Use this to run from forks which don't have access to the GH App."
        required: false

concurrency: renovate

env:
  # Specify what Renovate version to use (this is separate from the github-action version)
  RENOVATE_VERSION: "39.213.5"
  # Repository taken from variable to keep configuration file generic
  RENOVATE_REPOSITORIES: ${{ github.repository }}
  # Onboarding not needed for self hosted
  RENOVATE_ONBOARDING: "false"
  # Username for GitHub authentication (should match GitHub App name + [bot])
  RENOVATE_USERNAME: "renovate-rancher[bot]"
  # Git commit author used, must match GitHub App
  RENOVATE_GIT_AUTHOR: "renovate-rancher <119870437+renovate-rancher[bot]@users.noreply.github.com>"
  # Use GitHub API to create commits (this allows for signed commits from GitHub App)
  RENOVATE_PLATFORM_COMMIT: "true"
  # Override schedule if set
  RENOVATE_FORCE: ${{ github.event.inputs.overrideSchedule == 'true' && '{''schedule'':null}' || '' }}
  # Override loglevel if set
  LOG_LEVEL: ${{ inputs.logLevel || 'info' }}
  RENOVATE_CONFIG_FILE: ${{ inputs.renovateConfig || '.github/renovate.json' }}
  # https://docs.renovatebot.com/configuration-options/#configmigration
  RENOVATE_CONFIG_MIGRATION: ${{ inputs.configMigration || 'true' }}

permissions:
  contents: read
  id-token: write

jobs:
  renovate:
    runs-on: ${{fromJSON(inputs.runner)}}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Validate and printout config
        run: jq -e . "${RENOVATE_CONFIG_FILE}"
      - name: Check token
        id: override
        run: |
          if [[ -n "${{ secrets.override-token }}" ]]; then
            echo "Override token will be used"
            echo "use-gh-app=false" >> "$GITHUB_OUTPUT"
          else
            echo "GitHub App will be used"
            echo "use-gh-app=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Load Secrets from Vault
        if: steps.override.outputs.use-gh-app == 'true'
        uses: rancher-eio/read-vault-secrets@main
        with:
          secrets: |
            secret/data/github/org/${{ github.repository_owner }}/github/renovate-rancher appId | APP_ID ;
            secret/data/github/org/${{ github.repository_owner }}/github/renovate-rancher privateKey | PRIVATE_KEY
      - name: Get token
        if: steps.override.outputs.use-gh-app == 'true'
        id: get_token
        uses: actions/create-github-app-token@af35edadc00be37caa72ed9f3e6d5f7801bfdf09 # v1.11.7
        with:
          app-id: ${{ env.APP_ID }}
          private-key: ${{ env.PRIVATE_KEY }}
      - name: Generate custom data sources
        run: hack/generate-data-sources.sh
      - name: Self-hosted Renovate
        uses: renovatebot/github-action@cf5954a2aac7999882d3de4e462499adde159d04 # v41.0.17
        with:
          renovate-version: ${{ env.RENOVATE_VERSION }}
          configurationFile: ${{ env.RENOVATE_CONFIG_FILE }}
          token: "${{ steps.override.outputs.use-gh-app == 'false' && secrets.override-token || steps.get_token.outputs.token }}"
